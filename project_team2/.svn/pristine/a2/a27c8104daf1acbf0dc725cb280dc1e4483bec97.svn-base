/* 
 * =============================
 * 프로그램 설명 : 
 * 작성자 : 
 * 최초 작성일자 : 
 * 최종 수정일 : 
 * 수정 내용 : 
 * =============================
 * */

package com.bs.board.control;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;

import com.bs.util.DBUtil;
import com.bs.vo.NoticeBoardVO;

public class BoardDAO {

	// 게시판 조회
	public ArrayList<NoticeBoardVO> getBoardTotal() {
		ArrayList<NoticeBoardVO> list = new ArrayList<NoticeBoardVO>();
		String tml = "select * from notice_board";
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		NoticeBoardVO nbVo = null;
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(tml);
			rs = pstmt.executeQuery();
			
			while (rs.next()) {
				// (Integer no, String writer, String subject,String content,
				// String date, int flag)
				nbVo = new NoticeBoardVO(rs.getInt(1), rs.getString(2),
						rs.getString(3), rs.getString(4), rs.getString(5),
						rs.getInt(6));
				list.add(nbVo);
			}
			
		} catch (SQLException se) {
			System.out.println(se);
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {
				if (rs != null)
					rs.close();
				if (pstmt != null)
					pstmt.close();
				if (con != null)
					con.close();
			} catch (SQLException se) {
				
			}
		}
		return list;
	}

	// 테이블 컬럼 네임 가져오기
	public ArrayList<String> getColumnName() {
		ArrayList<String> columnName = new ArrayList<String>();
		String sql = "select NO" + "				, SUBJECT" + "				, WRITER"
				+ "				, DATE" + "     from notice_board";

		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		// ResultSetMetaData 객체 변수 선언
		ResultSetMetaData rsmd = null;
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(sql);
			rs = pstmt.executeQuery();
			rsmd = rs.getMetaData();
			// System.out.println(rsmd+"@@@@@@@@@@@@@@@@@@@@");

			int cols = rsmd.getColumnCount();
			for (int i = 1; i <= cols; i++) {
				columnName.add(rsmd.getColumnName(i));
			}
		} catch (SQLException se) {
			System.out.println(se);
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {
				if (rs != null)
					rs.close();
				if (pstmt != null)
					pstmt.close();
				if (con != null)
					con.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}
		}
		return columnName;
	}

	// 게시판 데이터 삭제 메서드
	public int delBoardContent(int no, String writer) throws Exception {
		// 데이터 처리를 위한 SQL 문
		String dml = "DELETE FROM NOTICE_BOARD WHERE NO = ? AND WRITER = ? ";
		Connection con = null;
		PreparedStatement pstmt = null;
		int i = 0;

		try {
			// DBUtil이라는 클래스의 getConnection( )메서드로 데이터베이스와 연결
			con = DBUtil.getConnection();
			// 입력받은 사용자 정보를 처리하기 위하여 SQL문장을 생성
			pstmt = con.prepareStatement(dml);

			pstmt.setInt(1, no); // 게시글 번호
			pstmt.setString(2, writer);//게시글 작성자
			// SQL문을 수행후 처리 결과를 얻어옴
			i = pstmt.executeUpdate();

		} catch (SQLException e) {
			System.out.println("e=[" + e + "]");
			e.printStackTrace();
		} catch (Exception e) {
			System.out.println("e=[" + e + "]");
			e.printStackTrace();
		} finally {

			try {
				// 데이터베이스와의 연결에 사용되었던 오브젝트를 해제
				if (pstmt != null)
					pstmt.close();
				if (con != null)
					con.close();
			} catch (SQLException e) {
				// e.printStackTrace();
			}
		}
		return i;
	}
}
